name: Ubuntu aaPanel + WordPress + Cloudflare Proxy + Auto Admin + Auto Renew

on:
  workflow_dispatch:
  schedule:
    # Jalankan otomatis setiap 3 hari pukul 03:00 UTC
    - cron: '0 3 */3 * *'

jobs:
  aapanel-wordpress-cf:
    runs-on: ubuntu-22.04
    timeout-minutes: 360
    env:
      DOMAIN: tokoada.web.id
      SUBDOMAIN: www.tokoada.web.id

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set root password (safe)
run: |
    if [ -z "${{ secrets.ROOT_PASSWORD }}" ]; then
      echo "❌ Secret ROOT_PASSWORD belum diatur!"
      echo "Tambahkan di Settings → Secrets → Actions → New secret → ROOT_PASSWORD"
      exit 1
    fi

    echo "root:${{ secrets.ROOT_PASSWORD }}" | sudo chpasswd || {
      echo "⚠️ Gagal set password dengan chpasswd, mencoba alternatif..."
      sudo passwd -d root || true
      echo "${{ secrets.ROOT_PASSWORD }}" | sudo passwd --stdin root 2>/dev/null || {
        echo "root:${{ secrets.ROOT_PASSWORD }}" | sudo tee /etc/chpasswd > /dev/null
      }
    }

    echo "::add-mask::${{ secrets.ROOT_PASSWORD }}"
    echo "✅ Root password berhasil diatur."

      - name: Install essentials
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-server ufw curl jq wget unzip lsb-release apt-transport-https ca-certificates

      - name: Configure SSH
        run: |
          sudo mkdir -p /root/.ssh
          echo "${{ secrets.SSH_PUB_KEY }}" | sudo tee -a /root/.ssh/authorized_keys
          sudo chmod 700 /root/.ssh
          sudo chmod 600 /root/.ssh/authorized_keys
          sudo sed -i 's/^#\?PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config
          sudo sed -i 's/^#\?PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config
          sudo systemctl restart ssh

      - name: Configure firewall
        run: |
          sudo ufw allow 22/tcp
          sudo ufw allow 8888/tcp
          sudo ufw allow 80/tcp
          sudo ufw allow 443/tcp
          sudo ufw --force enable

      - name: Get public IP
        run: |
          PUB_IP=$(curl -s ifconfig.me)
          echo "PUBLIC_IP=${PUB_IP}" >> $GITHUB_ENV
          echo "Server public IP is ${PUB_IP}"

      - name: Install aaPanel (if missing)
        run: |
          if ! command -v bt &> /dev/null; then
            wget -O install.sh http://www.aapanel.com/script/install-ubuntu_6.0_en.sh
            sudo bash install.sh aapanel || true
            sleep 10
            sudo systemctl enable bt || true
            sudo systemctl start bt || true
          else
            echo "aaPanel already installed."
          fi

      - name: Update Cloudflare DNS (root + www)
        env:
          CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: |
          DOMAIN=${{ env.DOMAIN }}
          SUBDOMAIN=${{ env.SUBDOMAIN }}
          IP=${{ env.PUBLIC_IP }}

          for NAME in $DOMAIN $SUBDOMAIN; do
            RECORD_ID=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/dns_records?type=A&name=${NAME}" \
              -H "Authorization: Bearer ${CF_API_TOKEN}" -H "Content-Type: application/json" | jq -r '.result[0].id')

            if [ "$RECORD_ID" = "null" ] || [ -z "$RECORD_ID" ]; then
              echo "Creating DNS record for ${NAME}"
              curl -s -X POST "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/dns_records" \
                -H "Authorization: Bearer ${CF_API_TOKEN}" -H "Content-Type: application/json" \
                --data "{\"type\":\"A\",\"name\":\"${NAME}\",\"content\":\"${IP}\",\"ttl\":1,\"proxied\":true}" | jq
            else
              echo "Updating existing DNS record for ${NAME}"
              curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/dns_records/${RECORD_ID}" \
                -H "Authorization: Bearer ${CF_API_TOKEN}" -H "Content-Type: application/json" \
                --data "{\"type\":\"A\",\"name\":\"${NAME}\",\"content\":\"${IP}\",\"ttl\":1,\"proxied\":true}" | jq
            fi
          done

          echo "✅ Cloudflare DNS synchronized (proxied 🔶)"

      - name: Install WordPress + Admin (first run only)
        run: |
          DOMAIN=${{ env.DOMAIN }}
          if [ ! -d "/www/wwwroot/${DOMAIN}" ]; then
            DB_PASS="wp$(openssl rand -hex 6)"
            ADMIN_PASS=$(openssl rand -base64 12)
            echo "::add-mask::${ADMIN_PASS}"

            sudo apt-get install -y mysql-client php php-mysql php-cli php-curl php-gd php-mbstring php-xml php-zip php-intl
            sudo mysql -e "CREATE DATABASE wordpress DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
            sudo mysql -e "CREATE USER 'wpuser'@'localhost' IDENTIFIED BY '${DB_PASS}';"
            sudo mysql -e "GRANT ALL PRIVILEGES ON wordpress.* TO 'wpuser'@'localhost'; FLUSH PRIVILEGES;"

            sudo mkdir -p /www/wwwroot/${DOMAIN}
            cd /www/wwwroot/${DOMAIN}
            sudo wget https://wordpress.org/latest.tar.gz
            sudo tar -xzf latest.tar.gz --strip-components=1
            sudo chown -R www-data:www-data /www/wwwroot/${DOMAIN}

            sudo cp wp-config-sample.php wp-config.php
            sudo sed -i "s/database_name_here/wordpress/" wp-config.php
            sudo sed -i "s/username_here/wpuser/" wp-config.php
            sudo sed -i "s/password_here/${DB_PASS}/" wp-config.php

            sudo bash -c 'cat > /etc/apache2/sites-available/'${DOMAIN}'.conf <<EOF
            <VirtualHost *:80>
                ServerName '${DOMAIN}'
                ServerAlias 'www.'${DOMAIN}
                DocumentRoot /www/wwwroot/'${DOMAIN}'
                <Directory /www/wwwroot/'${DOMAIN}'>
                    AllowOverride All
                </Directory>
            </VirtualHost>
            EOF'

            sudo a2ensite ${DOMAIN}.conf
            sudo a2enmod rewrite
            sudo systemctl reload apache2

            # Install WP-CLI
            curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
            chmod +x wp-cli.phar
            sudo mv wp-cli.phar /usr/local/bin/wp

            # Create admin user
            sudo -u www-data wp core install --url="https://${DOMAIN}" \
              --title="TokoAda Web" \
              --admin_user="admin" \
              --admin_password="${ADMIN_PASS}" \
              --admin_email="admin@${DOMAIN}" \
              --path="/www/wwwroot/${DOMAIN}"

            echo "Admin user: admin"
            echo "Admin password: ${ADMIN_PASS}" > /tmp/wp-admin-credentials.txt
          else
            echo "WordPress already installed."
          fi

      - name: Renew SSL (Let's Encrypt)
        run: |
          sudo apt-get install -y certbot python3-certbot-apache
          sudo certbot renew --quiet --no-self-upgrade || \
          sudo certbot --apache --non-interactive --agree-tos -m admin@${{ env.DOMAIN }} -d ${{ env.DOMAIN }} -d ${{ env.SUBDOMAIN }}
          echo "✅ SSL certificate renewed (Let's Encrypt)"

      - name: Backup site
        run: |
          TS=$(date -u +'%Y%m%dT%H%M%SZ')
          OUT="/tmp/aapanel-wp-auto-${TS}.tar.gz"
          sudo tar -czf "$OUT" -C / www root etc var/lib/mysql
          echo "BACKUP_FILE=$OUT" >> $GITHUB_ENV
          ls -lh "$OUT"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wordpress-auto-backup
          path: |
            /tmp/wp-admin-credentials.txt
            ${{ env.BACKUP_FILE }}

      - name: Summary report
        run: |
          echo "## 🔁 Auto Maintenance Report" >> $GITHUB_STEP_SUMMARY
          echo "- **Domain:** https://${{ env.DOMAIN }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Subdomain:** https://${{ env.SUBDOMAIN }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Cloudflare Proxy:** Enabled 🔶" >> $GITHUB_STEP_SUMMARY
          echo "- **SSL:** Renewed ✅" >> $GITHUB_STEP_SUMMARY
          echo "- **Backup:** Uploaded to Artifacts 📦" >> $GITHUB_STEP_SUMMARY
