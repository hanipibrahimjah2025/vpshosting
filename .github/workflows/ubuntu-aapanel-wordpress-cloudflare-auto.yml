name: Ubuntu aaPanel + WordPress + Cloudflare Proxy + Auto Admin + Auto Renew

on:
  workflow_dispatch:
  schedule:
    # Jalankan otomatis setiap 3 hari pukul 03:00 UTC
    - cron: '0 3 */3 * *'

jobs:
  aapanel-wordpress-cf:
    runs-on: ubuntu-22.04
    timeout-minutes: 360
    env:
      DOMAIN: tokoada.web.id
      SUBDOMAIN: www.tokoada.web.id

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set root password
        run: |
          if [ -z "${{ secrets.ROOT_PASSWORD }}" ]; then
            echo "❌ Secret ROOT_PASSWORD belum diatur!"
            echo "Tambahkan di Settings → Secrets → Actions → New secret → ROOT_PASSWORD"
            exit 1
          fi

          echo "root:${{ secrets.ROOT_PASSWORD }}" | sudo chpasswd || {
            echo "⚠️ Gagal set password dengan chpasswd, mencoba alternatif..."
            sudo passwd -d root || true
            echo "${{ secrets.ROOT_PASSWORD }}" | sudo passwd --stdin root 2>/dev/null || {
              echo "root:${{ secrets.ROOT_PASSWORD }}" | sudo tee /etc/chpasswd > /dev/null
            }
          }

          echo "::add-mask::${{ secrets.ROOT_PASSWORD }}"
          echo "✅ Root password berhasil diatur."

      - name: Install essentials
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-server ufw curl jq wget unzip lsb-release apt-transport-https ca-certificates

      - name: Configure SSH
        run: |
          sudo mkdir -p /root/.ssh
          echo "${{ secrets.SSH_PUB_KEY }}" | sudo tee -a /root/.ssh/authorized_keys
          sudo chmod 700 /root/.ssh
          sudo chmod 600 /root/.ssh/authorized_keys
          sudo sed -i 's/^#\?PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config
          sudo sed -i 's/^#\?PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config
          sudo systemctl restart ssh

      - name: Configure firewall
        run: |
          sudo ufw allow 22/tcp
          sudo ufw allow 8888/tcp
          sudo ufw allow 80/tcp
          sudo ufw allow 443/tcp
          sudo ufw --force enable

      - name: Get public IP
        run: |
          PUB_IP=$(curl -s ifconfig.me)
          echo "PUBLIC_IP=${PUB_IP}" >> $GITHUB_ENV
          echo "Server public IP is ${PUB_IP}"

      - name: Install aaPanel (if missing)
        run: |
          if ! command -v bt &> /dev/null; then
            wget -O install.sh http://www.aapanel.com/script/install-ubuntu_6.0_en.sh
            sudo bash install.sh aapanel || true
            sleep 10
            sudo systemctl enable bt || true
            sudo systemctl start bt || true
          else
            echo "aaPanel already installed."
          fi

      - name: Update Cloudflare DNS (root + www)
        env:
          CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: |
          DOMAIN=${{ env.DOMAIN }}
          SUBDOMAIN=${{ env.SUBDOMAIN }}
          IP=${{ env.PUBLIC_IP }}

          for NAME in $DOMAIN $SUBDOMAIN; do
            RECORD_ID=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/dns_records?type=A&name=${NAME}" \
              -H "Authorization: Bearer ${CF_API_TOKEN}" -H "Content-Type: application/json" | jq -r '.result[0].id')

            if [ "$RECORD_ID" = "null" ] || [ -z "$RECORD_ID" ]; then
              echo "Creating DNS record for ${NAME}"
              curl -s -X POST "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/dns_records" \
                -H "Authorization: Bearer ${CF_API_TOKEN}" -H "Content-Type: application/json" \
                --data "{\"type\":\"A\",\"name\":\"${NAME}\",\"content\":\"${IP}\",\"ttl\":1,\"proxied\":true}" | jq
            else
              echo "Updating existing DNS record for ${NAME}"
              curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/dns_records/${RECORD_ID}" \
                -H "Authorization: Bearer ${CF_API_TOKEN}" -H "Content-Type: application/json" \
                --data "{\"type\":\"A\",\"name\":\"${NAME}\",\"content\":\"${IP}\",\"ttl\":1,\"proxied\":true}" | jq
            fi
          done

          echo "✅ Cloudflare DNS synchronized (proxied 🔶)"
