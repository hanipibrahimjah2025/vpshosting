name: Ubuntu aaPanel + Cloudflare + Auto Site Setup

on:
  workflow_dispatch:

jobs:
  setup-aapanel:
    runs-on: ubuntu-22.04
    timeout-minutes: 180

    env:
      DOMAIN: tokoada.web.id
      SUBDOMAIN: www.tokoada.web.id

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: üîê Set root password
        run: |
          if [ -z "${{ secrets.ROOT_PASSWORD }}" ]; then
            echo "‚ùå Secret ROOT_PASSWORD belum diatur!"
            exit 1
          fi
          echo "root:${{ secrets.ROOT_PASSWORD }}" | sudo chpasswd
          echo "::add-mask::${{ secrets.ROOT_PASSWORD }}"
          echo "‚úÖ Root password diatur."

      - name: üß∞ Install essentials
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-server ufw curl jq wget unzip lsb-release apt-transport-https ca-certificates

      - name: üîë Configure SSH
        run: |
          sudo mkdir -p /root/.ssh
          echo "${{ secrets.SSH_PUB_KEY }}" | sudo tee -a /root/.ssh/authorized_keys
          sudo chmod 700 /root/.ssh
          sudo chmod 600 /root/.ssh/authorized_keys
          sudo sed -i 's/^#\?PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config
          sudo sed -i 's/^#\?PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config
          sudo systemctl restart ssh

      - name: üî• Configure Firewall (SSH + aaPanel + HTTP/HTTPS)
        run: |
          sudo ufw allow 22/tcp
          sudo ufw allow 8888/tcp
          sudo ufw allow 80/tcp
          sudo ufw allow 443/tcp
          sudo ufw --force enable

      - name: üåç Get Public IP
        run: |
          PUB_IP=$(curl -s ifconfig.me)
          echo "PUBLIC_IP=${PUB_IP}" >> $GITHUB_ENV
          echo "Server public IP is ${PUB_IP}"

      - name: üß© Install aaPanel
        run: |
          wget -O install.sh http://www.aapanel.com/script/install-ubuntu_6.0_en.sh
          sudo bash install.sh aapanel || true
          echo "‚úÖ aaPanel installation script executed."

      - name: ‚òÅÔ∏è Update Cloudflare DNS (root + www)
        env:
          CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: |
          DOMAIN=${{ env.DOMAIN }}
          SUBDOMAIN=${{ env.SUBDOMAIN }}
          IP=${{ env.PUBLIC_IP }}

          for NAME in $DOMAIN $SUBDOMAIN; do
            RECORD_ID=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/dns_records?type=A&name=${NAME}" \
              -H "Authorization: Bearer ${CF_API_TOKEN}" -H "Content-Type: application/json" | jq -r '.result[0].id')

            if [ "$RECORD_ID" = "null" ] || [ -z "$RECORD_ID" ]; then
              echo "üÜï Creating DNS record for ${NAME}"
              curl -s -X POST "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/dns_records" \
                -H "Authorization: Bearer ${CF_API_TOKEN}" -H "Content-Type: application/json" \
                --data "{\"type\":\"A\",\"name\":\"${NAME}\",\"content\":\"${IP}\",\"ttl\":1,\"proxied\":true}"
            else
              echo "‚ôªÔ∏è Updating existing DNS record for ${NAME}"
              curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/dns_records/${RECORD_ID}" \
                -H "Authorization: Bearer ${CF_API_TOKEN}" -H "Content-Type: application/json" \
                --data "{\"type\":\"A\",\"name\":\"${NAME}\",\"content\":\"${IP}\",\"ttl\":1,\"proxied\":true}"
            fi
          done
          echo "‚úÖ Cloudflare DNS synchronized (proxied ‚òÅÔ∏è)"

      - name: üèóÔ∏è Create Website on aaPanel
        run: |
          DOMAIN=${{ env.DOMAIN }}
          SITE_DIR="/www/wwwroot/${DOMAIN}"
          sudo mkdir -p "${SITE_DIR}"
          echo "<h1>Selamat Datang di ${DOMAIN}</h1><p>aaPanel & Cloudflare aktif ‚úÖ</p>" | sudo tee "${SITE_DIR}/index.html"
          sudo chown -R www-data:www-data "${SITE_DIR}"
          echo "‚úÖ Default website created at ${SITE_DIR}"

      - name: üîê Install SSL (Let's Encrypt)
        run: |
          sudo apt-get install -y certbot python3-certbot-apache
          sudo certbot certonly --standalone -d ${{ env.DOMAIN }} -d ${{ env.SUBDOMAIN }} \
            --non-interactive --agree-tos -m admin@${{ env.DOMAIN }} || true
          echo "‚úÖ SSL requested for ${{ env.DOMAIN }}"

      - name: üìã Summary Report
        run: |
          echo "## üåê aaPanel Hosting Setup Complete" >> $GITHUB_STEP_SUMMARY
          echo "- Panel URL: https://${{ env.PUBLIC_IP }}:8888" >> $GITHUB_STEP_SUMMARY
          echo "- Domain: https://${{ env.DOMAIN }}" >> $GITHUB_STEP_SUMMARY
          echo "- Cloudflare Proxy: Enabled ‚òÅÔ∏è" >> $GITHUB_STEP_SUMMARY
          echo "- SSL: Active (Let's Encrypt) ‚úÖ" >> $GITHUB_STEP_SUMMARY
          echo "- Web Root: /www/wwwroot/${{ env.DOMAIN }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Run 'bt default' via SSH to see aaPanel login credentials." >> $GITHUB_STEP_SUMMARY
